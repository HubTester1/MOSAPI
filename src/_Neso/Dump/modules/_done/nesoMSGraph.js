
// ----- PULL IN MODULES
const { Client } = require('@microsoft/microsoft-graph-client');
const axios = require('axios');

// ----- DEFINE HEALTH FUNCTIONS

module.exports = {

	Test: () => 
		// return a new promise
		new Promise((resolve, reject) => {
			// get a promise to retrieve the data
			axios({
				method: 'get',
				url: 'https://graph.microsoft.com/v1.0/users',
				timeout: 10000,
				headers: {
					Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6InM1R3IySkNTR2ptWGN1UzYxa1lMY2xhTFJ0clhURzV3YVNSY3p3MUhMRG8iLCJhbGciOiJSUzI1NiIsIng1dCI6ImFQY3R3X29kdlJPb0VOZzNWb09sSWgydGlFcyIsImtpZCI6ImFQY3R3X29kdlJPb0VOZzNWb09sSWgydGlFcyJ9.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yZmI5NTJlYS01NWI4LTQyZTgtOGYxMy0zN2RjMGQ4ODhkNGQvIiwiaWF0IjoxNTY5NDM0NjA1LCJuYmYiOjE1Njk0MzQ2MDUsImV4cCI6MTU2OTQzODUwNSwiYWlvIjoiNDJGZ1lQZzkzL2FGS3R2U0JmSkhWNXJOUG1qN0FBQT0iLCJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBUZXN0IiwiYXBwaWQiOiIwYjVlM2U3Zi1kMjg4LTQwMGEtODdjZC03YjcyN2ViNzgyNjkiLCJhcHBpZGFjciI6IjEiLCJpZHAiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yZmI5NTJlYS01NWI4LTQyZTgtOGYxMy0zN2RjMGQ4ODhkNGQvIiwib2lkIjoiNTA2OGNmMmMtYWMzOS00ZWY0LWFjYjktODg0OTlkNTVmYzc4Iiwicm9sZXMiOlsiUGxhY2UuUmVhZC5BbGwiLCJDaGF0LlVwZGF0ZVBvbGljeVZpb2xhdGlvbi5BbGwiLCJJZGVudGl0eVVzZXJGbG93LlJlYWRXcml0ZS5BbGwiLCJDYWxscy5Kb2luR3JvdXBDYWxsLkFsbCIsIkVkdVJvc3Rlci5SZWFkLkFsbCIsIkRldmljZU1hbmFnZW1lbnRNYW5hZ2VkRGV2aWNlcy5SZWFkLkFsbCIsIk9ubGluZU1lZXRpbmdzLlJlYWQuQWxsIiwiQWNjZXNzUmV2aWV3LlJlYWRXcml0ZS5NZW1iZXJzaGlwIiwiVGVhbXNBY3Rpdml0eS5SZWFkLkFsbCIsIk1haWwuUmVhZFdyaXRlIiwiSWRlbnRpdHlSaXNrRXZlbnQuUmVhZFdyaXRlLkFsbCIsIk9yZ0NvbnRhY3QuUmVhZC5BbGwiLCJPbmxpbmVNZWV0aW5ncy5SZWFkV3JpdGUuQWxsIiwiRGV2aWNlLlJlYWRXcml0ZS5BbGwiLCJVc2VyLlJlYWRXcml0ZS5BbGwiLCJEb21haW4uUmVhZFdyaXRlLkFsbCIsIkFwcGxpY2F0aW9uLlJlYWRXcml0ZS5Pd25lZEJ5IiwiU2VjdXJpdHlBY3Rpb25zLlJlYWRXcml0ZS5BbGwiLCJTZWN1cml0eUV2ZW50cy5SZWFkLkFsbCIsIkRlbGVnYXRlZFBlcm1pc3Npb25HcmFudC5SZWFkV3JpdGUuQWxsIiwiQ2FsZW5kYXJzLlJlYWQiLCJNYWlsLlJlYWRCYXNpYy5BbGwiLCJQcml2aWxlZ2VkQWNjZXNzLlJlYWQuQXp1cmVBRCIsIlJvbGVNYW5hZ2VtZW50LlJlYWQuRGlyZWN0b3J5IiwiRWR1QXNzaWdubWVudHMuUmVhZFdyaXRlLkFsbCIsIlBlb3BsZS5SZWFkLkFsbCIsIkFwcGxpY2F0aW9uLlJlYWRXcml0ZS5BbGwiLCJDYWxscy5Jbml0aWF0ZUdyb3VwQ2FsbC5BbGwiLCJHcm91cC5SZWFkLkFsbCIsIkFkbWluaXN0cmF0aXZlVW5pdC5SZWFkLkFsbCIsIkFjY2Vzc1Jldmlldy5SZWFkV3JpdGUuQWxsIiwiT25QcmVtaXNlc1B1Ymxpc2hpbmdQcm9maWxlcy5SZWFkV3JpdGUuQWxsIiwiRGlyZWN0b3J5LlJlYWRXcml0ZS5BbGwiLCJUZWFtc0FjdGl2aXR5LlNlbmQiLCJJZGVudGl0eVJpc2t5VXNlci5SZWFkV3JpdGUuQWxsIiwiRWR1QXNzaWdubWVudHMuUmVhZFdyaXRlQmFzaWMuQWxsIiwiTWFpbGJveFNldHRpbmdzLlJlYWQiLCJFZHVBZG1pbmlzdHJhdGlvbi5SZWFkLkFsbCIsIkNhbGxzLkpvaW5Hcm91cENhbGxBc0d1ZXN0LkFsbCIsIlRocmVhdEluZGljYXRvcnMuUmVhZFdyaXRlLk93bmVkQnkiLCJTaXRlcy5SZWFkLkFsbCIsIkRldmljZU1hbmFnZW1lbnRTZXJ2aWNlQ29uZmlnLlJlYWQuQWxsIiwiU2l0ZXMuUmVhZFdyaXRlLkFsbCIsIkNvbnRhY3RzLlJlYWRXcml0ZSIsIkdyb3VwLlJlYWRXcml0ZS5BbGwiLCJTaXRlcy5NYW5hZ2UuQWxsIiwiU2VjdXJpdHlFdmVudHMuUmVhZFdyaXRlLkFsbCIsIk5vdGVzLlJlYWQuQWxsIiwiSWRlbnRpdHlVc2VyRmxvdy5SZWFkLkFsbCIsIlVzZXIuSW52aXRlLkFsbCIsIkVkdVJvc3Rlci5SZWFkV3JpdGUuQWxsIiwiRmlsZXMuUmVhZFdyaXRlLkFsbCIsIkRpcmVjdG9yeS5SZWFkLkFsbCIsIlByaXZpbGVnZWRBY2Nlc3MuUmVhZC5BenVyZVJlc291cmNlcyIsIlVzZXIuUmVhZC5BbGwiLCJFZHVBc3NpZ25tZW50cy5SZWFkQmFzaWMuQWxsIiwiRWR1Um9zdGVyLlJlYWRCYXNpYy5BbGwiLCJEZXZpY2VNYW5hZ2VtZW50U2VydmljZUNvbmZpZy5SZWFkV3JpdGUuQWxsIiwiVXNlck5vdGlmaWNhdGlvbi5SZWFkV3JpdGUuQ3JlYXRlZEJ5QXBwIiwiRGV2aWNlTWFuYWdlbWVudFJCQUMuUmVhZC5BbGwiLCJUcnVzdEZyYW1ld29ya0tleVNldC5SZWFkV3JpdGUuQWxsIiwiSWRlbnRpdHlQcm92aWRlci5SZWFkV3JpdGUuQWxsIiwiRmlsZXMuUmVhZC5BbGwiLCJPcmdhbml6YXRpb24uUmVhZFdyaXRlLkFsbCIsIkRldmljZU1hbmFnZW1lbnRDb25maWd1cmF0aW9uLlJlYWQuQWxsIiwiTWFpbC5SZWFkIiwiQXBwUm9sZUFzc2lnbm1lbnQuUmVhZFdyaXRlLkFsbCIsIkNoYXQuUmVhZC5BbGwiLCJEZXZpY2VNYW5hZ2VtZW50TWFuYWdlZERldmljZXMuUmVhZFdyaXRlLkFsbCIsIkNoYW5uZWxNZXNzYWdlLlJlYWQuQWxsIiwiUHJpdmlsZWdlZEFjY2Vzcy5SZWFkV3JpdGUuQXp1cmVBRCIsIlVzZXIuRXhwb3J0LkFsbCIsIkVkdUFzc2lnbm1lbnRzLlJlYWQuQWxsIiwiU2VjdXJpdHlBY3Rpb25zLlJlYWQuQWxsIiwiSWRlbnRpdHlQcm92aWRlci5SZWFkLkFsbCIsIlByaXZpbGVnZWRBY2Nlc3MuUmVhZFdyaXRlLkF6dXJlUmVzb3VyY2VzIiwiQ2FsZW5kYXJzLlJlYWRXcml0ZSIsIklkZW50aXR5Umlza3lVc2VyLlJlYWQuQWxsIiwiQWNjZXNzUmV2aWV3LlJlYWQuQWxsIiwiRWR1QWRtaW5pc3RyYXRpb24uUmVhZFdyaXRlLkFsbCIsIk1haWwuU2VuZCIsIlByaXZpbGVnZWRBY2Nlc3MuUmVhZC5BenVyZUFER3JvdXAiLCJDaGF0LlJlYWRXcml0ZS5BbGwiLCJJbmZvcm1hdGlvblByb3RlY3Rpb25Qb2xpY3kuUmVhZC5BbGwiLCJDaGFubmVsTWVzc2FnZS5VcGRhdGVQb2xpY3lWaW9sYXRpb24uQWxsIiwiTWFpbGJveFNldHRpbmdzLlJlYWRXcml0ZSIsIk9yZ2FuaXphdGlvbi5SZWFkLkFsbCIsIlJvbGVNYW5hZ2VtZW50LlJlYWRXcml0ZS5EaXJlY3RvcnkiLCJDb250YWN0cy5SZWFkIiwiSWRlbnRpdHlSaXNrRXZlbnQuUmVhZC5BbGwiLCJNYWlsLlJlYWRCYXNpYyIsIkFkbWluaXN0cmF0aXZlVW5pdC5SZWFkV3JpdGUuQWxsIiwiQXVkaXRMb2cuUmVhZC5BbGwiLCJQb2xpY3kuUmVhZC5BbGwiLCJNZW1iZXIuUmVhZC5IaWRkZW4iLCJEZXZpY2VNYW5hZ2VtZW50Q29uZmlndXJhdGlvbi5SZWFkV3JpdGUuQWxsIiwiQ2FsbHMuQWNjZXNzTWVkaWEuQWxsIiwiUHJvZ3JhbUNvbnRyb2wuUmVhZC5BbGwiLCJEZXZpY2VNYW5hZ2VtZW50TWFuYWdlZERldmljZXMuUHJpdmlsZWdlZE9wZXJhdGlvbnMuQWxsIiwiR3JvdXAuU2VsZWN0ZWQiLCJTaXRlcy5GdWxsQ29udHJvbC5BbGwiLCJEZXZpY2VNYW5hZ2VtZW50QXBwcy5SZWFkV3JpdGUuQWxsIiwiRGV2aWNlTWFuYWdlbWVudEFwcHMuUmVhZC5BbGwiLCJUaHJlYXRJbmRpY2F0b3JzLlJlYWQuQWxsIiwiUHJvZ3JhbUNvbnRyb2wuUmVhZFdyaXRlLkFsbCIsIlJlcG9ydHMuUmVhZC5BbGwiLCJDYWxscy5Jbml0aWF0ZS5BbGwiLCJFeHRlcm5hbEl0ZW0uUmVhZFdyaXRlLkFsbCIsIk5vdGVzLlJlYWRXcml0ZS5BbGwiLCJEZXZpY2VNYW5hZ2VtZW50UkJBQy5SZWFkV3JpdGUuQWxsIiwiVHJ1c3RGcmFtZXdvcmtLZXlTZXQuUmVhZC5BbGwiLCJQb2xpY3kuUmVhZFdyaXRlLkZlYXR1cmVSb2xsb3V0IiwiUG9saWN5LlJlYWRXcml0ZS5UcnVzdEZyYW1ld29yayIsIlByaXZpbGVnZWRBY2Nlc3MuUmVhZFdyaXRlLkF6dXJlQURHcm91cCJdLCJzdWIiOiI1MDY4Y2YyYy1hYzM5LTRlZjQtYWNiOS04ODQ5OWQ1NWZjNzgiLCJ0aWQiOiIyZmI5NTJlYS01NWI4LTQyZTgtOGYxMy0zN2RjMGQ4ODhkNGQiLCJ1dGkiOiJTSFlCVkdiRVRFV0o1VmpSd2NJWUFBIiwidmVyIjoiMS4wIiwieG1zX3RjZHQiOjEzMTI5NDQ0Nzh9.kosFgWaJGas0HyaLya_J0NX9KE6i4LMgvGXh_wAxitJq4uSiEMUrh9jACF-UX_b9Qvv1ADFn5nWCzd5BSd2SO7PA6L_TjIrUMoWuV0Mx5BsESm2mmrcCoXl9XfQOO53XMMtphQkpy311LU7njACerk3JEns-WUbC3I6bnIHpWsVc2hmjPLWn8N47Hb4Ry_Q7wnkg3ItvvtB9ljW0-LqBuWkzchBrhCMSGjeVFKJal_uz-6laI3rNRqZNmq4wyS3ve1VVqO9_EYMs1elbI0tYM5v-agYu45pnYRF7QshWfTvJVPT9XtW9CG9wY3bgl6dRrGRp_1802wn0oD7iyUomWw',
				},
			})
				// if the promise is resolved with the docs, then resolve this promise with the docs
				.then((result) => { resolve(result.data.value); })
				// if the promise is rejected with an error
				.catch((error) => {
					console.log('ERRORRRRRRRRRRRRR');
					// set up error container
					const errorToReport = {
						config: error.config,
					};
					if (error.response) {
						// set reporting error's properties
						errorToReport.summary = 'Response status code is not 2xx';
						errorToReport.details.data = error.response.data;
						errorToReport.details.status = error.response.status;
						errorToReport.details.headers = error.response.headers;
					} else if (error.request) {
						// set reporting error's properties; note: error.request is
						//  	an instance of XMLHttpRequest in the browser and 
						// 		an instance of http.ClientRequest in node.js
						errorToReport.summary = 'No response';
						errorToReport.details = error.request;
					} else {
						// set reporting error's properties
						errorToReport.summary = 'Request could not be made';
						errorToReport.details = error.message;
					}
					// reject this promise with an error
					reject({
						error: true,
						nesoAxiosError: errorToReport,
					});
				});
		}),

};
