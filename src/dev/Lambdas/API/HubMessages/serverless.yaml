custom:
  file: ${file(../../../config-common.yaml)}
  config:
    webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true
    excludeFiles: ./testing/*

# -------------------------------------------------------

    service: api-hub-messages
    memorySize: 256
    timeout: 5

functions:
  HandleSettingsRequest:
    handler: index.HandleSettingsRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.hubMessages.settings}
          method: get
          cors: true
  HandleNextMessageIDRequest:
    handler: index.HandleNextMessageIDRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.hubMessages.nextID}
          method: get
          cors: true
  HandleMessagesRequest:
    handler: index.HandleMessagesRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.hubMessages.messages}
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                expiration: true
                tag: true
                limit: true
  HandleAddMessageRequest:
    handler: index.HandleAddMessageRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.hubMessages.add}
          method: post
          cors: true
  HandleUpdateMessageRequest:
    handler: index.HandleUpdateMessageRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.hubMessages.update}
          method: post
          cors: true

service: ${self:custom.config.service}
provider:
  name: aws
  runtime: ${self:custom.file.provider.runtime}
  stage: ${self:custom.file.custom.config.stage}
  region: us-east-1
  profile: ${self:custom.file.provider.profile}
  memorySize: ${self:custom.config.memorySize}
  timeout: ${self:custom.config.timeout}
  deploymentBucket:
    name: mos-api-${self:provider.stage}-lambdas
  environment:
    NODE_PATH: "./:/opt/node_modules"
    authJWTPayloadMessage: ${self:custom.file.authJWTPayloadMessage}
    authJWTPayloadSecret: ${self:custom.file.authJWTPayloadSecret}
    cronScheduleEmailQueueProcessing: ${self:custom.file.cronScheduleEmailQueueProcessing}
    cronScheduleGSEJobSync: ${self:custom.file.cronScheduleGSEJobSync}
    cronScheduleGSEScheduleSync: ${self:custom.file.cronScheduleGSEScheduleSync}
    cronScheduleGSESignupSync: ${self:custom.file.cronScheduleGSESignupSync}
    cronScheduleGSESignupReminders: ${self:custom.file.cronScheduleGSESignupReminders}
    cronScheduleGSECreditReminders: ${self:custom.file.cronScheduleGSECreditReminders}
    cronSchedulePeopleProcessing: ${self:custom.file.cronSchedulePeopleProcessing}
    graphClientID: ${self:custom.file.graphClientID}
    graphClientSecret: ${self:custom.file.graphClientSecret}
    graphTenantID: ${self:custom.file.graphTenantID}
    mongoDbHostUnique: ${self:custom.file.mongoDbHostUnique}
    mongoDbPass: ${self:custom.file.mongoDbPass}
    mongoDbUser: ${self:custom.file.mongoDbUser}
    stage: ${self:provider.stage}
    twitterConsumerKey: ${self:custom.file.twitterConsumerKey}
    twitterConsumerSecret: ${self:custom.file.twitterConsumerSecret}
    twitterAccessTokenKey: ${self:custom.file.twitterAccessTokenKey}
    twitterAccessTokenSecret: ${self:custom.file.twitterAccessTokenSecret}
    upApiKey: ${self:custom.file.upApiKey}
    upEmployeeChangesPass: ${self:custom.file.upEmployeeChangesPass}
    upEmployeeChangesUser: ${self:custom.file.upEmployeeChangesUser}

package:
  individually: true

plugins:
  - serverless-webpack