custom:
  file: ${file(../../../config-common.yaml)}
  config:
    webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true
    excludeFiles: ./testing/*

# -------------------------------------------------------

    service: api-people
    memorySize: 256
    timeout: 5

functions:
  HandleSettingsRequest:
    handler: index.HandleSettingsRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.settings}
          method: get
          cors: true
  HandleReturnAllPeopleRequest:
    handler: index.HandleReturnAllPeopleRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.allFlat}
          method: get
          cors: true
  HandleReturnAllPeopleByDivisionDepartmentRequest:
    handler: index.HandleReturnAllPeopleByDivisionDepartmentRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.allHierarchy}
          method: get
          cors: true
  HandleReturnAllPeopleInDepartmentRequest:
    handler: index.HandleReturnAllPeopleInDepartmentRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetDepartment}
          method: post
          cors: true
  HandleReturnAllPeopleInDivisionRequest:
    handler: index.HandleReturnAllPeopleInDivisionRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetDivision}
          method: post
          cors: true
  HandleReturnAllManagersFlatRequest:
    handler: index.HandleReturnAllManagersFlatRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetManagers}
          method: get
          cors: true
  HandleReturnAllManagersWithFlatDownlineRequest:
    handler: index.HandleReturnAllManagersWithFlatDownlineRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetManagersDownlinesFlat}
          method: get
          cors: true
  HandleReturnManagersHierarchicalDownlineRequest:
    handler: index.HandleReturnManagersHierarchicalDownlineRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetManagersDownlinesHierarchical}
          method: get
          cors: true
  HandleReturnDirectReportsForOneManagerRequest:
    handler: index.HandleReturnDirectReportsForOneManagerRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetManagerDownlineDirect}
          method: post
          cors: true
  HandleReturnOneManagerWithFlatDownlineRequest:
    handler: index.HandleReturnOneManagerWithFlatDownlineRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetManagerDownlineFlat}
          method: post
          cors: true
  HandleReturnOneManagerWithWithHierarchicalDownlineRequest:
    handler: index.HandleReturnOneManagerWithWithHierarchicalDownlineRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetManagerDownlineHierarchical}
          method: post
          cors: true
  HandleReturnOnePersonRequest:
    handler: index.HandleReturnOnePersonRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetOne}
          method: post
          cors: true
  HandleReturnFullFlatUplineForOneUserRequest:
    handler: index.HandleReturnFullFlatUplineForOneUserRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.subsetOneUpline}
          method: post
          cors: true
  HandleReturnAllDepartmentsRequest:
    handler: index.HandleReturnAllDepartmentsRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.listDepartments}
          method: get
          cors: true
  HandleReturnAllDivisionsRequest:
    handler: index.HandleReturnAllDivisionsRequest
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:provider.stage}.people.listDivisions}
          method: get
          cors: true

# -------------------------------------------------------

service: ${self:custom.config.service}

provider:
  name: aws
  runtime: ${self:custom.file.provider.runtime}
  stage: ${self:custom.file.custom.config.stage}
  region: us-east-1
  profile: ${self:custom.file.provider.profile}
  memorySize: ${self:custom.config.memorySize}
  timeout: ${self:custom.config.timeout}
  deploymentBucket:
    name: mos-api-${self:provider.stage}-lambdas
  environment:
    NODE_PATH: "./:/opt/node_modules"
    authJWTPayloadMessage: ${self:custom.file.authJWTPayloadMessage}
    authJWTPayloadSecret: ${self:custom.file.authJWTPayloadSecret}
    cronScheduleEmailQueueProcessing: ${self:custom.file.cronScheduleEmailQueueProcessing}
    cronScheduleGSEJobSync: ${self:custom.file.cronScheduleGSEJobSync}
    cronScheduleGSEScheduleSync: ${self:custom.file.cronScheduleGSEScheduleSync}
    cronScheduleGSESignupSync: ${self:custom.file.cronScheduleGSESignupSync}
    cronScheduleGSESignupReminders: ${self:custom.file.cronScheduleGSESignupReminders}
    cronScheduleGSECreditReminders: ${self:custom.file.cronScheduleGSECreditReminders}
    cronSchedulePeopleProcessing: ${self:custom.file.cronSchedulePeopleProcessing}
    graphClientID: ${self:custom.file.graphClientID}
    graphClientSecret: ${self:custom.file.graphClientSecret}
    graphTenantID: ${self:custom.file.graphTenantID}
    mongoDbHostUnique: ${self:custom.file.mongoDbHostUnique}
    mongoDbPass: ${self:custom.file.mongoDbPass}
    mongoDbUser: ${self:custom.file.mongoDbUser}
    stage: ${self:provider.stage}
    twitterConsumerKey: ${self:custom.file.twitterConsumerKey}
    twitterConsumerSecret: ${self:custom.file.twitterConsumerSecret}
    twitterAccessTokenKey: ${self:custom.file.twitterAccessTokenKey}
    twitterAccessTokenSecret: ${self:custom.file.twitterAccessTokenSecret}
    upApiKey: ${self:custom.file.upApiKey}
    upEmployeeChangesPass: ${self:custom.file.upEmployeeChangesPass}
    upEmployeeChangesUser: ${self:custom.file.upEmployeeChangesUser}

package:
  individually: true

plugins:
  - serverless-webpack